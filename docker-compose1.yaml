version: '3.7'
services:
  nginx:
    image: nginx
    volumes:
      - ./conf/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - 80:80
      - 443:443
    networks:
      - app-network
    depends_on:
      - backend
      - frontend
    environment:
      - NGINX_PORT=80

  frontend:
    container_name: frontend
    image: salmasov/stuffy-helper-frontend:latest
    ports:
      - 8080:80
    restart: unless-stopped
    networks:
      - app-network
      
  backend:
    container_name: backend
    image: slavadno/stuffyhelper
    build: .
    ports:
      - 7777:7777
    environment:
      - Authorization__ConnectionString=${AUTH_CONN_STR}
      - Authorization__JWT__Secret==${AUTH_JWT_SECRET}
      - Authorization__JWT__ValidIssuer=${AUTH_JWT_ISSUER}
      - Authorization__JWT__ValidAudience=${AUTH_JWT_AUDIENCE}
      - EntityFramework__DbProvider=${EF_PROVIDER}
      - EntityFramework__ConnectionString=${EF_CONN_STR}
      - MinioStore__Endpoint=${MINIO_ENDPOINT}
      - MinioStore__AccessKey=${MINIO_ACCESS}
      - MinioStore__SecretKey=${MINIO_SECRET}
      - MinioStore__NetworkTimeout=3600
      - MinioStore__PresignedUrlExpiry=12:00:00
      - StuffyFileWeb__StuffyFileStore__ContainerName=${FILE_CONTAINER_NAME}
      - EmailService__Server=${EMAIL_SERVER}
      - EmailService__Port=${EMAIL_PORT}
      - EmailService__Account=${EMAIL_ACCOUNT}
      - EmailService__Password=${EMAIL_PASSWORD}
      - EmailService__SenderEmail=${EMAIL_SENDER_EMAIL}
      - EmailService__SenderName=${EMAIL_SENDER_NAME}
      - Frontend__Endpoint=${FRONTEND_ENDPOINT}
    depends_on:
      - postgres-web
      - s3
    restart: unless-stopped
    networks:
      - app-network
      
  check-finder:
    container_name: check-finder
    image: romqsqd/check-finder:latest
    ports:
      - 5062:5062
    environment:
      - ProverkaChecka__Endpoint=${CHECK_SERVICE_ENDPOINT}
      - ProverkaChecka__Token=${CHECK_SERVICE_TOKEN}
    restart: unless-stopped
    networks:
      - app-network
     
  postgres-web:
    image: postgres:12.4-alpine
    environment:
        - POSTGRES_MULTIPLE_DATABASES=${POSTGRES_MULTIPLE_DATABASES}
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
        - ../stuffydata/postgresql/data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network
    
  s3:
    image: minio/minio
    ports:
      - "9000:9000"
    volumes:
      - ../stuffydata/minio/data:/data
    environment:
      MINIO_ACCESS_KEY: ${MINIO_ACCESS}
      MINIO_SECRET_KEY: ${MINIO_SECRET}
    command: server /data
    networks:
      - app-network

networks:
  app-network:
    driver: bridge
  stuffyhelper.authorization.api:
    image: stuffyhelper.authorization.api
    build:
      context: .
      dockerfile: src/StuffyHelper.Authorization.Api/Dockerfile

  stuffyhelper.emailservice.api:
    image: stuffyhelper.emailservice.api
    build:
      context: .
      dockerfile: src/StuffyHelper.EmailService.Api/Dockerfile

  stuffyhelper.authorization.data:
    image: stuffyhelper.authorization.data
    build:
      context: .
      dockerfile: src/StuffyHelper.Authorization.Data/Dockerfile

  stuffyhelper.authorization.core:
    image: stuffyhelper.authorization.core
    build:
      context: .
      dockerfile: StuffyHelper.Authorization.Core/Dockerfile
